{"ast":null,"code":"import React, { Component } from 'react';\n\nconst cheerio = require(\"cheerio\");\n\nconst axios = require(\"axios\").default;\n\nconst fethHtml = async url => {\n  try {\n    const {\n      data\n    } = await axios.get(url);\n    return data;\n  } catch {\n    console.error(`ERROR: An error occurred while trying to fetch the URL: ${url}`);\n  }\n};\n\nconst extractDeal = selector => {\n  const title = selector.find(\".responsive_search_name_combined\").find(\"div[class='col search_name ellipsis'] > span[class='title']\").text().trim();\n  const releaseDate = selector.find(\".responsive_search_name_combined\").find(\"div[class='col search_released responsive_secondrow']\").text().trim();\n  const link = selector.attr(\"href\").trim();\n  const priceSelector = selector.find(\"div[class='col search_price_discount_combined responsive_secondrow']\").find(\"div[class='col search_price discounted responsive_secondrow']\");\n  const originalPrice = priceSelector.find(\"span > strike\").text().trim();\n  const pricesHtml = priceSelector.html().trim();\n  const matched = pricesHtml.match(/(<br>(.+\\s[0-9].+.\\d+))/);\n  const discountedPrice = matched[matched.length - 1];\n  return {\n    title,\n    releaseDate,\n    originalPrice,\n    discountedPrice,\n    link\n  };\n};\n\nconst scrapSteam = async () => {\n  const steamUrl = \"https://store.steampowered.com/search/?filter=weeklongdeals\";\n  const html = await fethHtml(steamUrl);\n  const selector = cheerio.load(html);\n  const searchResults = selector(\"body\").find(\"#search_result_container > #search_resultsRows > a\");\n  const deals = searchResults.map((idx, el) => {\n    const elementSelector = selector(el);\n    return extractDeal(elementSelector);\n  }).get();\n  return deals;\n};\n\nmodule.exports = scrapSteam;","map":{"version":3,"sources":["E:/DEV/React/esport/src/Componant/Scraper.js"],"names":["React","Component","cheerio","require","axios","default","fethHtml","url","data","get","console","error","extractDeal","selector","title","find","text","trim","releaseDate","link","attr","priceSelector","originalPrice","pricesHtml","html","matched","match","discountedPrice","length","scrapSteam","steamUrl","load","searchResults","deals","map","idx","el","elementSelector","module","exports"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiBE,OAA/B;;AAEA,MAAMC,QAAQ,GAAG,MAAMC,GAAN,IAAa;AAC5B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;AACA,WAAOC,IAAP;AACD,GAHD,CAGE,MAAM;AACNE,IAAAA,OAAO,CAACC,KAAR,CAAe,2DAA0DJ,GAAI,EAA7E;AACD;AACF,CAPD;;AASA,MAAMK,WAAW,GAAGC,QAAQ,IAAI;AAC9B,QAAMC,KAAK,GAAGD,QAAQ,CACnBE,IADW,CACN,kCADM,EAEXA,IAFW,CAEN,6DAFM,EAGXC,IAHW,GAIXC,IAJW,EAAd;AAMA,QAAMC,WAAW,GAAGL,QAAQ,CACzBE,IADiB,CACZ,kCADY,EAEjBA,IAFiB,CAEZ,uDAFY,EAGjBC,IAHiB,GAIjBC,IAJiB,EAApB;AAMA,QAAME,IAAI,GAAGN,QAAQ,CAACO,IAAT,CAAc,MAAd,EAAsBH,IAAtB,EAAb;AAEA,QAAMI,aAAa,GAAGR,QAAQ,CAC3BE,IADmB,CACd,sEADc,EAEnBA,IAFmB,CAEd,+DAFc,CAAtB;AAIA,QAAMO,aAAa,GAAGD,aAAa,CAChCN,IADmB,CACd,eADc,EAEnBC,IAFmB,GAGnBC,IAHmB,EAAtB;AAKA,QAAMM,UAAU,GAAGF,aAAa,CAACG,IAAd,GAAqBP,IAArB,EAAnB;AACA,QAAMQ,OAAO,GAAGF,UAAU,CAACG,KAAX,CAAiB,yBAAjB,CAAhB;AAEA,QAAMC,eAAe,GAAGF,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAA/B;AAEA,SAAO;AACLd,IAAAA,KADK;AAELI,IAAAA,WAFK;AAGLI,IAAAA,aAHK;AAILK,IAAAA,eAJK;AAKLR,IAAAA;AALK,GAAP;AAOD,CApCD;;AAsCA,MAAMU,UAAU,GAAG,YAAY;AAC7B,QAAMC,QAAQ,GACZ,6DADF;AAGA,QAAMN,IAAI,GAAG,MAAMlB,QAAQ,CAACwB,QAAD,CAA3B;AAEA,QAAMjB,QAAQ,GAAGX,OAAO,CAAC6B,IAAR,CAAaP,IAAb,CAAjB;AAEA,QAAMQ,aAAa,GAAGnB,QAAQ,CAAC,MAAD,CAAR,CAAiBE,IAAjB,CACpB,oDADoB,CAAtB;AAIA,QAAMkB,KAAK,GAAGD,aAAa,CACxBE,GADW,CACP,CAACC,GAAD,EAAMC,EAAN,KAAa;AAChB,UAAMC,eAAe,GAAGxB,QAAQ,CAACuB,EAAD,CAAhC;AACA,WAAOxB,WAAW,CAACyB,eAAD,CAAlB;AACD,GAJW,EAKX5B,GALW,EAAd;AAOA,SAAOwB,KAAP;AACD,CApBD;;AAsBAK,MAAM,CAACC,OAAP,GAAiBV,UAAjB","sourcesContent":["import React, { Component } from 'react';\r\nconst cheerio = require(\"cheerio\");\r\nconst axios = require(\"axios\").default;\r\n\r\nconst fethHtml = async url => {\r\n  try {\r\n    const { data } = await axios.get(url);\r\n    return data;\r\n  } catch {\r\n    console.error(`ERROR: An error occurred while trying to fetch the URL: ${url}`);\r\n  }\r\n};\r\n\r\nconst extractDeal = selector => {\r\n  const title = selector\r\n    .find(\".responsive_search_name_combined\")\r\n    .find(\"div[class='col search_name ellipsis'] > span[class='title']\")\r\n    .text()\r\n    .trim();\r\n\r\n  const releaseDate = selector\r\n    .find(\".responsive_search_name_combined\")\r\n    .find(\"div[class='col search_released responsive_secondrow']\")\r\n    .text()\r\n    .trim();\r\n\r\n  const link = selector.attr(\"href\").trim();\r\n\r\n  const priceSelector = selector\r\n    .find(\"div[class='col search_price_discount_combined responsive_secondrow']\")\r\n    .find(\"div[class='col search_price discounted responsive_secondrow']\");\r\n\r\n  const originalPrice = priceSelector\r\n    .find(\"span > strike\")\r\n    .text()\r\n    .trim();\r\n\r\n  const pricesHtml = priceSelector.html().trim();\r\n  const matched = pricesHtml.match(/(<br>(.+\\s[0-9].+.\\d+))/);\r\n\r\n  const discountedPrice = matched[matched.length - 1];\r\n\r\n  return {\r\n    title,\r\n    releaseDate,\r\n    originalPrice,\r\n    discountedPrice,\r\n    link\r\n  };\r\n};\r\n\r\nconst scrapSteam = async () => {\r\n  const steamUrl =\r\n    \"https://store.steampowered.com/search/?filter=weeklongdeals\";\r\n\r\n  const html = await fethHtml(steamUrl);\r\n\r\n  const selector = cheerio.load(html);\r\n\r\n  const searchResults = selector(\"body\").find(\r\n    \"#search_result_container > #search_resultsRows > a\"\r\n  );\r\n\r\n  const deals = searchResults\r\n    .map((idx, el) => {\r\n      const elementSelector = selector(el);\r\n      return extractDeal(elementSelector);\r\n    })\r\n    .get();\r\n\r\n  return deals;\r\n};\r\n\r\nmodule.exports = scrapSteam;\r\n\r\n"]},"metadata":{},"sourceType":"module"}