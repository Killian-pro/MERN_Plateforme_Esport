{"ast":null,"code":"const utils = require('./utils');\n\nconst namespaces = require('./namespaces');\n\nconst getAuthors = node => {\n  const authors = utils.getElementTextContentArray(node, 'author', namespaces.itunes);\n  return authors.map(author => ({\n    name: author\n  }));\n};\n\nconst getBlock = node => utils.getElementTextContent(node, 'block', namespaces.itunes);\n\nconst getSubCategories = node => {\n  const categories = utils.getChildElements(node, 'category', namespaces.itunes);\n\n  if (categories.length === 0) {\n    return [];\n  }\n\n  return categories.map(category => ({\n    name: category.getAttribute('text')\n  }));\n};\n\nconst getCategories = node => {\n  const categories = utils.getChildElements(node, 'category', namespaces.itunes);\n  return categories.map(category => ({\n    name: category.getAttribute('text'),\n    subCategories: getSubCategories(category)\n  }));\n};\n\nconst getComplete = node => utils.getElementTextContent(node, 'complete', namespaces.itunes);\n\nconst getDuration = node => utils.getElementTextContent(node, 'duration', namespaces.itunes);\n\nconst getExplicit = node => utils.getElementTextContent(node, 'explicit', namespaces.itunes);\n\nconst getImage = node => {\n  const images = utils.getChildElements(node, 'image', namespaces.itunes);\n  return images.length > 0 ? images[0].getAttribute('href') : undefined;\n};\n\nconst getIsClosedCaptioned = node => utils.getElementTextContent(node, 'isClosedCaptioned', namespaces.itunes);\n\nconst getNewFeedUrl = node => utils.getElementTextContent(node, 'new-feed-url', namespaces.itunes);\n\nconst getOrder = node => utils.getElementTextContent(node, 'order', namespaces.itunes);\n\nconst getOwner = node => {\n  const owners = utils.getChildElements(node, 'owner', namespaces.itunes);\n\n  if (owners.length === 0) {\n    return {\n      name: undefined,\n      email: undefined\n    };\n  }\n\n  return {\n    name: utils.getElementTextContent(owners[0], 'name', namespaces.itunes),\n    email: utils.getElementTextContent(owners[0], 'email', namespaces.itunes)\n  };\n};\n\nconst getSubtitle = node => utils.getElementTextContent(node, 'subtitle', namespaces.itunes);\n\nconst getSummary = node => utils.getElementTextContent(node, 'summary', namespaces.itunes);\n\nexports.parseChannel = node => ({\n  authors: getAuthors(node),\n  block: getBlock(node),\n  categories: getCategories(node),\n  complete: getComplete(node),\n  explicit: getExplicit(node),\n  image: getImage(node),\n  newFeedUrl: getNewFeedUrl(node),\n  owner: getOwner(node),\n  subtitle: getSubtitle(node),\n  summary: getSummary(node)\n});\n\nexports.parseItem = node => ({\n  authors: getAuthors(node),\n  block: getBlock(node),\n  duration: getDuration(node),\n  explicit: getExplicit(node),\n  image: getImage(node),\n  isClosedCaptioned: getIsClosedCaptioned(node),\n  order: getOrder(node),\n  subtitle: getSubtitle(node),\n  summary: getSummary(node)\n});","map":{"version":3,"sources":["D:/GIT/Plateforme_EsportV2/Front/node_modules/react-native-rss-parser/parsers/itunes.js"],"names":["utils","require","namespaces","getAuthors","node","authors","getElementTextContentArray","itunes","map","author","name","getBlock","getElementTextContent","getSubCategories","categories","getChildElements","length","category","getAttribute","getCategories","subCategories","getComplete","getDuration","getExplicit","getImage","images","undefined","getIsClosedCaptioned","getNewFeedUrl","getOrder","getOwner","owners","email","getSubtitle","getSummary","exports","parseChannel","block","complete","explicit","image","newFeedUrl","owner","subtitle","summary","parseItem","duration","isClosedCaptioned","order"],"mappings":"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","sourcesContent":["const utils = require('./utils');\r\nconst namespaces = require('./namespaces');\r\n\r\nconst getAuthors = (node) => {\r\n  const authors = utils.getElementTextContentArray(\r\n    node,\r\n    'author',\r\n    namespaces.itunes\r\n  );\r\n\r\n  return authors.map((author) => ({\r\n    name: author,\r\n  }));\r\n};\r\n\r\nconst getBlock = (node) =>\r\n  utils.getElementTextContent(node, 'block', namespaces.itunes);\r\n\r\nconst getSubCategories = (node) => {\r\n  const categories = utils.getChildElements(\r\n    node,\r\n    'category',\r\n    namespaces.itunes\r\n  );\r\n\r\n  if (categories.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  return categories.map((category) => ({\r\n    name: category.getAttribute('text'),\r\n  }));\r\n};\r\n\r\nconst getCategories = (node) => {\r\n  const categories = utils.getChildElements(\r\n    node,\r\n    'category',\r\n    namespaces.itunes\r\n  );\r\n\r\n  return categories.map((category) => ({\r\n    name: category.getAttribute('text'),\r\n    subCategories: getSubCategories(category),\r\n  }));\r\n};\r\n\r\nconst getComplete = (node) =>\r\n  utils.getElementTextContent(node, 'complete', namespaces.itunes);\r\n\r\nconst getDuration = (node) =>\r\n  utils.getElementTextContent(node, 'duration', namespaces.itunes);\r\n\r\nconst getExplicit = (node) =>\r\n  utils.getElementTextContent(node, 'explicit', namespaces.itunes);\r\n\r\nconst getImage = (node) => {\r\n  const images = utils.getChildElements(node, 'image', namespaces.itunes);\r\n\r\n  return images.length > 0 ? images[0].getAttribute('href') : undefined;\r\n};\r\n\r\nconst getIsClosedCaptioned = (node) =>\r\n  utils.getElementTextContent(node, 'isClosedCaptioned', namespaces.itunes);\r\n\r\nconst getNewFeedUrl = (node) =>\r\n  utils.getElementTextContent(node, 'new-feed-url', namespaces.itunes);\r\n\r\nconst getOrder = (node) =>\r\n  utils.getElementTextContent(node, 'order', namespaces.itunes);\r\n\r\nconst getOwner = (node) => {\r\n  const owners = utils.getChildElements(node, 'owner', namespaces.itunes);\r\n\r\n  if (owners.length === 0) {\r\n    return {\r\n      name: undefined,\r\n      email: undefined,\r\n    };\r\n  }\r\n\r\n  return {\r\n    name: utils.getElementTextContent(owners[0], 'name', namespaces.itunes),\r\n    email: utils.getElementTextContent(owners[0], 'email', namespaces.itunes),\r\n  };\r\n};\r\n\r\nconst getSubtitle = (node) =>\r\n  utils.getElementTextContent(node, 'subtitle', namespaces.itunes);\r\n\r\nconst getSummary = (node) =>\r\n  utils.getElementTextContent(node, 'summary', namespaces.itunes);\r\n\r\nexports.parseChannel = (node) => ({\r\n  authors: getAuthors(node),\r\n  block: getBlock(node),\r\n  categories: getCategories(node),\r\n  complete: getComplete(node),\r\n  explicit: getExplicit(node),\r\n  image: getImage(node),\r\n  newFeedUrl: getNewFeedUrl(node),\r\n  owner: getOwner(node),\r\n  subtitle: getSubtitle(node),\r\n  summary: getSummary(node),\r\n});\r\n\r\nexports.parseItem = (node) => ({\r\n  authors: getAuthors(node),\r\n  block: getBlock(node),\r\n  duration: getDuration(node),\r\n  explicit: getExplicit(node),\r\n  image: getImage(node),\r\n  isClosedCaptioned: getIsClosedCaptioned(node),\r\n  order: getOrder(node),\r\n  subtitle: getSubtitle(node),\r\n  summary: getSummary(node),\r\n});\r\n"]},"metadata":{},"sourceType":"script"}